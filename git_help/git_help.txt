використання: git [--version] [--help] [-C <path>] [-c <name> = <value>)
           [--exec-path [= <путь>]] [--html-шлях] [- man-path] [--info-path]
           [-p | --пагінат | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir = <path>] [--work-tree = <path>] [--namespace = <name>]
           <команда> [<відповіді>)

Це загальні команди Git, що використовуються в різних ситуаціях:

запустити робочу область (див. також: навчальний посібник git)
   clone 		Клонувати сховище в новий каталог
   init 		Створення порожнього сховища Git або повторна ініціалізація існуючого

працювати над поточною зміною (див. також: git help daily)
   add			додати вміст файлу до індексу
   mv 			Перемістити або перейменувати файл, каталог або символічну посилання
   reset 		Скидання струму HEAD до заданого стану
   rm 			Видалення файлів з робочого дерева та з індексу

вивчити історію та стан (див. також: git help revisions)
   bisect 		Використовуйте двійковий пошук, щоб знайти фіксацію, що ввів помилку
   grep 		Друк ліній, що відповідають шаблону
   log	 		Показувати журнали вчинення
   show 		Показати різні типи об'єктів
   status 		Показати статус робочого дерева

рости, відзначати і налаштовувати вашу спільну історію
   branch		Вкажіть, створюйте або видаляйте гілки
   checkout 	Перемикач гілок або відновлення робочих файлів дерев
   commit 		Зміни запису до сховища
   diff 		Показати зміни між фіксацією, фіксацією та робочим деревом тощо
   merge 		Об'єднати дві або більше історій розвитку
   rebase 		Повторно звертається до верхньої частини іншої бази
   tag 			Створення, перелік, видалення або перевірка об'єкта тега, підписаного за допомогою GPG

співпрацювати (див. також: робочі процеси git help)
   fetch 		Завантажити об'єкти та refs з іншого сховища
   pull 		Fetch з і інтегрувати з іншим сховищем або локальною гілкою
   push			Натисніть Оновити віддалені посилання разом з відповідними об'єктами

'git help -a' і 'git help -g' - список доступних підкоманд, а деякі
Концепція керівництва. Див. Розділ "git help <команда>" або "git help <concept>"
читати про конкретну підкоманду або концепцію.

########################################################################################################################################

Дивись "git help <команда>", щоб прочитати про конкретну підкоманду

Порція головних команд:
   add ======= Додати вміст файлу до індексу
   am ======= Застосувати серію латок з поштової скриньки
   archive ======= Створити архів файлів з імені дерева
   bisect ======= Використовуйте двійковий пошук, щоб знайти фіксацію, яка ввела помилку
   branch ======= Список, створення або видалення гілок
   bundle ======= Перемістити об'єкти та посилання за архівом
   checkout ======= Перемикання гілок або відновлення файлів робочих дерев
   cherry-pick ======= Застосувати зміни, внесені деякими існуючими коммітами
   citool ======= Графічна альтернатива git-commit
   clean ======= Видаліть файли з робочого дерева
   clone ======= Клонування сховища в новий каталог
   commit ======= Запис змін до сховища
   description ======= Дати об'єкту людське читабельне ім'я на основі доступного посилання
   diff ======= Показати зміни між фіксацією, фіксацією та робочим деревом тощо
   fetch ======= Завантажувати об'єкти та посилання з іншого сховища
   format-patch ======= Підготуйте патчі для подання електронної пошти
   gc ======= Очистити непотрібні файли та оптимізувати локальне сховище
   gitk ======= Браузер сховища Git
   grep ======= Друк ліній, що відповідають шаблону
   gui ======= Портативний графічний інтерфейс до Git
   init ======= Створення порожнього сховища Git або повторна ініціалізація існуючого
   log ======= Показати запис журналу
   branch ======= Список, створення або видалення гілок
   bundle ======= Перемістити об'єкти та посилання за архівом
   checkout ======= Перемикання гілок або відновлення файлів робочих дерев
   cherry-pick ======= Застосувати зміни, внесені деякими існуючими коммітами
   citool ======= Графічна альтернатива git-commit
   clean ======= Видаліть файли з робочого дерева
   clone ======= Клонування сховища в новий каталог
   commit ======= Запис змін до сховища
   description ======= Дати об'єкту людське читабельне ім'я на основі доступного посилання
   diff ======= Показати зміни між фіксацією, фіксацією та робочим деревом тощо
   fetch ======= Завантажувати об'єкти та посилання з іншого сховища
   format-patch ======= Підготуйте патчі для подання електронної пошти
   gc ======= Очистити непотрібні файли та оптимізувати локальне сховище
   gitk ======= Браузер сховища Git
   grep ======= Друк ліній, що відповідають шаблону
   gui ======= Портативний графічний інтерфейс до Git
   init ======= Створення порожнього сховища Git або повторна ініціалізація існуючого
   log ======= Показати журнали обчислень
   merge ======= Об'єднати дві або більше історії розвитку
   mv ======= Перемістити або перейменувати файл, каталог або символічну посилання
   notes ======= Додати або перевірити примітки об'єктів
   pull ======= Отримати та інтегрувати з іншим сховищем або локальною гілкою
   push ======= Оновити віддалені посилання разом з відповідними об'єктами
   range-diff ======= Порівняти два діапазони фіксації (наприклад, дві версії гілки)
   rebase ======= Повторно вступає до верхньої частини іншої бази
   reset ======= скидання поточного HEAD до заданого стану
   revert ======= Повернути деякі існуючі компіляції
   rm ======= Видалити файли з робочого дерева та з індексу
   shortlog ======= Узагальнення виводу "git log"
   show ======= Показати різні типи об'єктів
   stash ======= Сховати зміни в брудному робочому каталозі
   status ======= Показати статус робочого дерева
   submodule ======= Ініціалізувати, оновлювати або перевіряти підмодулі
   tag ======= Створення, перелік, видалення або перевірка об'єкта тега, підписаного за допомогою GPG
   worktree ======= Керування кількома робочими деревами

Допоміжні команди / маніпулятори:
   config ======= Отримати та встановити репозиторій або глобальні параметри
   fast-export ======= експортер даних Git
   fast-import ======= Backend для швидких імпортерів даних Git
   filter-branch ======= Переписати гілки
   mergetool ======= Запустіть засоби вирішення конфліктів злиття для вирішення конфліктів злиття
   pack-refs ======= Пакувальні голови та теги для ефективного доступу до сховища
   prune ======= Обрізати всі недоступні об'єкти з бази даних об'єкта =======
   reflog ======= Керувати інформацією reflog
   remote ======= Керування набором відстежуваних сховищ
   repack ======= Пакет розпакованих об'єктів у сховищі
   replace ======= Створити список, видалити refs для заміни об'єктів

Допоміжні команди / слідчі:
   annotate ======= Анотація рядків файлів з інформацією фіксації
   blame ======= Показувати, яка редакція та автор останній змінив кожний рядок файлу
   count-objects ======= Розраховуйте кількість розпакованих об'єктів та їхнє споживання на диску
   difftool ======= Показати зміни, використовуючи загальні інструменти diff
   fsck ======= Перевіряє зв'язок і дійсність об'єктів у базі даних
   gitweb ======= Веб-інтерфейс Git (веб-інтерфейс для сховищ Git)
   help ======= Відображення довідкової інформації про Git
   instaweb ======= Миттєво переглядайте робоче сховище в gitweb
   merge-tree ======= Показати тристороннє злиття без торкання індексу
   rerere ======= Повторне використання записаного дозволу конфліктних об'єднань
   show-branch ======= Показати гілки та їх компіляції
   verify-commit ======= Перевірка підпису GPG фіксації
   verify-tag ======= Перевірте підпис GPG тегів
   whatchanged ======= Показати журнали з різницею в кожному введенні

Взаємодія з іншими:
   archimport ======= Імпортувати сховище архів GNU в Git
   cvsexportcommit ======= Експортувати окрему фіксацію до перевірки CVS
   cvsimport ======= Врятуйте свої дані з інших людей, які люблять ненавидіти
   cvsserver ======= Емулятор сервера CVS для Git
   imap-send ======= Відправити колекцію патчів від stdin до папки IMAP
   p4 ======= Імпортувати з і подавати до сховищ Perforce
   quiltimport ======= Застосовує накладення на поточну гілку
   request-pull ======= Створює резюме очікуваних змін
   send-email ======= Відправити колекцію патчів як електронні листи
   svn ======= Двонаправлена ​​операція між сховищем Subversion і Git

Команди / маніпулятори низького рівня:
   apply ======= Застосування патча до файлів та / або до індексу
   checkout-index ======= Копіювати файли з індексу на робоче дерево
   commit-graph ======= Запис і перевірка файлів Git commit-graph
   commit-tree ======= Створити новий об'єкт фіксації
   hash-object ======= Обчислювати ідентифікатор об'єкта і додатково створює BLOB-файл з файлу
   index-pack ======= Файл індексу збірки для існуючого запакованого архіву
   merge-file ======= Запустити тристоронній злиття файлів
   merge-index ======= Виконати злиття для файлів, які потребують об'єднання
   mktag ======= Створює об'єкт тегу
   mktree ======= Створити деревоподібний об'єкт у форматі ls-tree
   multi-pack-index ======= Записуйте та перевіряйте індекси з кількома пакетами
   pack-objects ======= Створити запакований архів об'єктів
   prune-packed ======= Видаляти додаткові об'єкти, які вже є у файлах пакета
   read-tree ======= Читає інформацію про дерево в індекс
   symbolic-ref ======= Читати, змінювати і видаляти символічні посилання
   unpack-objects ======= Розпакуйте об'єкти з упакованого архіву
   update-index ======= Зареєструвати вміст файлу в робочому дереві до індексу
   update-ref ======= Оновити назву об'єкта, що зберігається в ref, безпечно
   write-tree ======= Створити об'єкт дерева з поточного індексу

Команди / запитувачі низького рівня:
   cat-file ======= Вкажіть інформацію про вміст або тип і розмір для об'єктів сховища
   cherry ======= Знайти компіляції, які ще потрібно застосувати до висхідного потоку
   diff-files ======= Порівняє файли у робочому дереві та індексі
   diff-index ======= Порівняйте дерево з робочим деревом або індексом
   diff-tree ======= Порівнює вміст і режим крапель, знайдених за допомогою двох об'єктів дерева
   for-each-ref ======= Вивести інформацію про кожний реф
   get-tar-commit-id ======= Витягнути ID збірки з архіву, створеного за допомогою git-архіву
   ls-files ======= Показати інформацію про файли в індексі та робочому дереві
   ls-remote ======= Список посилань у віддаленому сховищі
   ls-tree ======= Список вмісту об'єкта дерева
   merge-base ======= Знайти як хороших спільних предків можна для об'єднання
   name-rev ======= Знайти символічні імена для заданих оборотів
   pack-redundant ======= Знайти резервні файли пакунків
   rev-list ======= Списки фіксують об'єкти в зворотному хронологічному порядку
   rev-parse ======= Вибір параметрів масажу
   show-index ======= Показати запакований архівний індекс
   show-ref ======= Список посилань у локальному сховищі
   unpack-file ======= Створює тимчасовий файл із вмістом blob
   var ======= Показати логічну змінну Git
   verify-pack ======= Підтвердіть упаковані файли архіву Git

Команди низького рівня / Синхронізація сховищ:
   daemon ======= Дійсно простий сервер для сховищ Git
   fetch-pack ======= Отримати відсутні об'єкти з іншого сховища
   http-backend ======= Серверна реалізація Git через HTTP
   send-pack ======= Натискайте об'єкти над протоколом Git на інше сховище
   update-server-info ======= Оновлення допоміжного інформаційного файлу, щоб допомогти безглуздим серверам

Команди низького рівня / внутрішні помічники:
   check-attr ======= Відображення інформації gitattributes
   check-ignore ======= Відладка файлів gitignore / exclude
   check-mailmap ======= Показати канонічні імена та адреси електронної пошти контактів
   check-ref-format ======= Забезпечує, щоб референтне ім'я було добре сформовано
   column ======= Відображення даних у стовпцях
   credential ======= Отримати та зберегти облікові дані користувача
   credential-cache ======= Помічник тимчасово зберігати паролі в пам'яті
   credential-store ======= Помічник для зберігання облікових даних на диску
   fmt-merge-msg ======= Створити повідомлення про злиття
   interpret-trailers ======= додавати або аналізувати структуровану інформацію в повідомленнях фіксації
   mailinfo ======= Витягує патч і авторство з одного повідомлення електронної пошти
   mailsplit ======= Проста програма UNIX mbox splitter
   merge-one-file ======= Стандартна допоміжна програма для використання з git-merge-index
   patch-id ======= Обчислення унікального ідентифікатора для виправлення
   sh-i18n ======= Код установки Git для i18n для скриптів оболонки
   sh-setup ======= Код встановлення скрипту оболонки Git
   stripspace ======= Видалити непотрібні пробіли

Зовнішні команди:
   flow
   lfs

########################################################################################################################################

Загальні довідники Git:
   attributes ======= Визначення атрибутів на шляху
   cli ======= інтерфейс командного рядка Git і узгодження
   core-tutorial ======= Підручник з Git для розробників
   cvs-migration ======= Git для користувачів CVS
   diffcore ======= Налаштування виводу diff
   everyday ======= Корисний мінімальний набір команд для Everyday Git
   глосарій ======= Глосарій Git
   гачки ======= гачки, що використовуються Git
   ignore ======= Визначає навмисно непроігнаровані файли для ігнорування
   modules ======= Визначення властивостей підмодулів
   простори імен ======= простори імен Git
   repository-layout ======= Розташування сховища Git
   revisions ======= Визначення ревізій та діапазонів для Git
   tutorial ======= Навчальний посібник для Git
   tutorial-2 ======= Вступний посібник до Git: частина друга
   workflows ======= Огляд рекомендованих робочих процесів з Git

'git help -a' і 'git help -g' - список доступних підкоманд, а деякі
Концепція керівництва. Див. Розділ "git help <команда>" або "git help <concept>"
читати про конкретну підкоманду або концепцію.